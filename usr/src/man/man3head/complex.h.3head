.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online at
.\" http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open
.\" Group, have given us permission to reprint portions of their
.\" documentation.
.\"
.\" In the following statement, the phrase ``this text'' refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form
.\" in the SunOS Reference Manual, from IEEE Std 1003.1, 2004 Edition,
.\" Standard for Information Technology -- Portable Operating System
.\" Interface (POSIX), The Open Group Base Specifications Issue 6,
.\" Copyright (C) 2001-2004 by the Institute of Electrical and Electronics
.\" Engineers, Inc and The Open Group.  In the event of any discrepancy
.\" between these versions and the original IEEE and The Open Group
.\" Standard, the original IEEE and The Open Group Standard is the referee
.\" document.  The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\"
.\" Copyright (c) 2001, The IEEE and The Open Group.  All Rights Reserved.
.\" Portions  Copyright (c) 2003, Sun Microsystems, Inc.  All Rights Reserved.
.\"
.TH COMPLEX.H 3HEAD "Dec 17, 2003"
.SH NAME
complex.h, complex \- complex arithmetic
.SH SYNOPSIS
.LP
.nf
#include <\fBcomplex.h\fR>
.fi

.SH DESCRIPTION
.sp
.LP
The <\fBcomplex.h\fR> header defines the following macros:
.sp
.ne 2
.na
\fB\fBcomplex\fR\fR
.ad
.RS 16n
Expands to \fB_Complex\fR.
.RE

.sp
.ne 2
.na
\fB\fB_Complex_I\fR\fR
.ad
.RS 16n
Expands to a constant expression of type const float \fB_Complex\fR, with the
value of the imaginary unit (that is, a number i such that i^2=\(mi1).
.RE

.sp
.ne 2
.na
\fB\fBimaginary\fR\fR
.ad
.RS 16n
Expands to \fB_Imaginary\fR.
.RE

.sp
.ne 2
.na
\fB\fB_Imaginary_I\fR\fR
.ad
.RS 16n
Expands to a constant expression of type \fBconst float _Imaginary\fR with the
value of the imaginary unit.
.RE

.sp
.ne 2
.na
\fB\fBI\fR\fR
.ad
.RS 16n
Expands to either \fB_Imaginary_I\fR or \fB_Complex_I\fR. If \fB_Imaginary_I\fR
is  not defined, \fBI\fR expands to \fB_Complex_I\fR.
.RE

.sp
.LP
An application can undefine and then, if appropriate, redefine the
\fBcomplex\fR, \fBimaginary\fR, and \fBI\fR macros.
.SH USAGE
.sp
.LP
Values are interpreted as radians, not degrees.
.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(7) for descriptions of the following attributes:
.sp

.sp
.TS
box;
c | c
l | l .
ATTRIBUTE TYPE	ATTRIBUTE VALUE
_
Interface Stability	Standard
.TE

.SH SEE ALSO
.sp
.LP
.BR cabs (3M),
.BR cacos (3M),
.BR cacosh (3M),
.BR carg (3M),
.BR casin (3M),
.BR casinh (3M),
.BR catan (3M),
.BR catanh (3M),
.BR ccos (3M),
.BR ccosh (3M),
.BR cexp (3M),
.BR cimag (3M),
.BR clog (3M),
.BR conj (3M),
.BR cpow (3M),
.BR cproj (3M),
.BR creal (3M),
.BR csin (3M),
.BR csinh (3M),
.BR csqrt (3M),
.BR ctan (3M),
.BR ctanh (3M),
.BR attributes (7),
.BR standards (7)
.SH NOTES
.sp
.LP
The choice of \fBI\fR instead of \fBi\fR for the imaginary unit concedes to the
widespread use of the identifier \fBi\fR for other purposes. The application
can use a different identifier, say \fBj\fR, for the imaginary unit by
following the inclusion of the <\fBcomplex.h\fR> header with:
.sp
.in +2
.nf
#undef I
#define j _Imaginary_I
.fi
.in -2

.sp
.LP
An \fBI\fR suffix to designate imaginary constants is not required, as
multiplication by \fBI\fR provides a sufficiently convenient and more generally
useful notation for imaginary terms. The corresponding real type for the
imaginary unit is \fBfloat\fR, so that use of \fBI\fR for algorithmic or
notational convenience does not result in widening types.
.sp
.LP
On systems with imaginary types, the application has the ability to control
whether use of the macro \fBI\fR introduces an imaginary type, by explicitly
defining \fBI\fR to be \fB_Imaginary_I\fR or \fB_Complex_I\fR.
.sp
.LP
Disallowing imaginary types is useful for some applications intended to run on
implementations without support for such types.
.sp
.LP
The macro \fB_Imaginary_I\fR provides a test for whether imaginary types are
supported. The \fBcis()\fR function \fB(cos(x) + I*sin(x))\fR was considered
but rejected because its implementation is easy and straightforward, even
though some implementations could compute sine and cosine more efficiently in
tandem.
